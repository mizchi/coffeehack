// Generated by CoffeeScript 1.3.3
var commands;

commands = {
  '>': function(game) {
    var pp;
    pp = game.player.getPosition();
    if (game.currentMap().getCell(pp.x, pp.y) === Map.STAIR_DOWN) {
      game.fire('godown');
    }
    return null;
  },
  '<': function(game) {
    var pp;
    pp = game.player.getPosition();
    if (game.level > 0 && game.currentMap().getCell(pp.x, pp.y) === Map.STAIR_UP) {
      game.fire('goup');
    }
    return null;
  },
  ';': function(game) {
    var it, possibleItems, pp, _i, _len;
    pp = game.player.getPosition();
    possibleItems = game.getItems(pp.x, pp.y);
    if ((possibleItems != null ? possibleItems.length : void 0) != null) {
      for (_i = 0, _len = possibleItems.length; _i < _len; _i++) {
        it = possibleItems[_i];
        if (it != null) {
          game.fire('message', {
            message: it.name
          });
        }
      }
    }
    return null;
  },
  ',': function(game) {
    var cch, possibleItems, pp;
    pp = game.player.getPosition();
    possibleItems = game.getItems(pp.x, pp.y);
    if (possibleItems != null) {
      cch = game.player.inventory.addItem(possibleItems[0]);
      if (cch != null) {
        game.fire('message', {
          message: "You picked up a " + possibleItems[0].name + " - " + cch + "."
        });
      }
      if (cch != null) {
        game.shiftItem(pp.x, pp.y);
      }
    }
    return null;
  },
  'i': function(game) {
    var ch, disparr, item;
    disparr = (function() {
      var _ref, _results;
      _ref = game.player.inventory.listItems();
      _results = [];
      for (ch in _ref) {
        item = _ref[ch];
        if (item != null) {
          _results.push("" + ch + " - " + item.name + "(" + (item.dice.join('d')) + ")");
        }
      }
      return _results;
    })();
    game.fire('message', {
      message: disparr.join('\n')
    });
    console.log(game.player.inventory.listItems());
    return null;
  },
  'w': function(game) {
    return function(ch) {
      var weapon;
      weapon = game.player.wield(ch);
      if (weapon != null) {
        game.fire('message', {
          message: "You wielded the " + weapon.name + " " + weapon.dice[0] + "d" + weapon.dice[1] + "."
        });
      }
      game.fire('turn');
      return null;
    };
  },
  'd': function(game) {
    var pp;
    pp = game.player.getPosition();
    return function(ch) {
      var item;
      item = game.player.inventory.removeItem(ch);
      console.log(item);
      game.addItem(pp.x, pp.y, item);
      return null;
    };
  },
  'x': function(game, tothisdir) {
    var dstcs, f, isOkToGo, map, nbc, pp, rnd, ttd;
    if (tothisdir == null) {
      tothisdir = null;
    }
    if (game.player.isDead()) {
      game.player.hp = 100;
    }
    console.log(tothisdir);
    map = game.currentMap();
    dstcs = (function() {
      var i, j, _i, _j, _ref, _ref1;
      for (i = _i = 0, _ref = map._map.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        for (j = _j = 0, _ref1 = map._map[i].length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          if (map.getCell(j, i) === Map.STAIR_DOWN) {
            return {
              x: j,
              y: i
            };
          }
        }
      }
    })();
    isOkToGo = function(x, y) {
      if (map.isWalkable(x, y) || map.isAttackable(x, y)) {
        return true;
      } else {
        return false;
      }
    };
    pp = game.player.getPosition();
    rnd = !(utils.randomInt(10) < 3);
    nbc = map.getNearbyCells();
    if (map.getCell(pp.x, pp.y) === Map.STAIR_DOWN) {
      commands['>'](game);
    } else if ((tothisdir && ((tothisdir === 'u' && isOkToGo(pp.x, pp.y - 1)) || (tothisdir === 'd' && isOkToGo(pp.x, pp.y + 1)) || (tothisdir === 'l' && isOkToGo(pp.x - 1, pp.y)) || (tothisdir === 'r' && isOkToGo(pp.x + 1, pp.y)))) && utils.randomInt(10) > 3) {
      ttd = tothisdir;
      game.player.walk(map, tothisdir);
    } else if (pp.x < dstcs.x && isOkToGo(pp.x + 1, pp.y) && utils.randomInt(10) > 4) {
      game.player.walk(map, 'r');
    } else if (pp.y < dstcs.y && isOkToGo(pp.x, pp.y + 1) && utils.randomInt(10) > 4) {
      game.player.walk(map, 'd');
    } else if (pp.x > dstcs.x && isOkToGo(pp.x - 1, pp.y) && utils.randomInt(10) > 4) {
      game.player.walk(map, 'l');
    } else if (pp.y > dstcs.y && isOkToGo(pp.x, pp.y - 1) && utils.randomInt(10) > 4) {
      game.player.walk(map, 'u');
    } else {
      ttd = null;
      f = function() {
        var d;
        d = [
          {
            d: 'r',
            x: pp.x + 1,
            y: pp.y
          }, {
            d: 'l',
            x: pp.x - 1,
            y: pp.y
          }, {
            d: 'd',
            x: pp.x,
            y: pp.y + 1
          }, {
            d: 'u',
            x: pp.x,
            y: pp.y - 1
          }
        ][utils.randomInt(4)];
        if (isOkToGo(d.x, d.y)) {
          game.player.walk(map, d.d);
          return ttd = d.d;
        } else {
          return f();
        }
      };
      f();
    }
    game.fire('turn');
    return setTimeout((function() {
      return commands['x'](game, ttd);
    }), 80);
  }
};
